<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Collaborative Notepad</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link rel="icon" type="image/svg+xml" href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 384 512'><path fill='%233498db' d='M320 464c8.8 0 16-7.2 16-16V160H256c-17.7 0-32-14.3-32-32V48H64c-8.8 0-16 7.2-16 16V448c0 8.8 7.2 16 16 16H320zM0 64C0 28.7 28.7 0 64 0H229.5c17 0 33.3 6.7 45.3 18.7l90.5 90.5c12 12 18.7 28.3 18.7 45.3V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V64z'/></svg>"/>
    <style>
        :root {
            --primary-color: #3498db;
            --secondary-color: #2ecc71;
            --dark-bg: #1a1a2e;
            --dark-secondary: #16213e;
            --light-bg: #f8f9fa;
            --light-text: #e1e1e1;
            --dark-text: #2d3436;
            --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        }

        html, body {
            height: 100%;
            margin: 0;
            display: flex;
            flex-direction: column;
            transition: var(--transition);
        }

        body.light-mode {
            background-color: var(--light-bg);
            color: var(--dark-text);
        }

        body.dark-mode {
            background-color: var(--dark-bg);
            color: var(--light-text);
        }

        header {
            padding: 1rem 2rem;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            box-shadow: var(--shadow);
        }

        .header-content {
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .logo h1 {
            font-size: 1.5rem;
            font-weight: 700;
        }

        .logo i {
            font-size: 1.8rem;
        }

        .controls {
            display: flex;
            gap: 1rem;
            align-items: center;
        }

        .url-control {
            display: flex;
            gap: 0.5rem;
            background: rgba(255, 255, 255, 0.1);
            padding: 0.5rem;
            border-radius: 8px;
            backdrop-filter: blur(10px);
        }

        input {
            background: rgba(255, 255, 255, 0.9);
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            outline: none;
            transition: var(--transition);
        }

        button {
            background: rgba(255, 255, 255, 0.2);
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            cursor: pointer;
            transition: var(--transition);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        button:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: translateY(-1px);
        }

        .container {
            flex: 1;
            padding: 2rem;
            max-width: 1200px;
            margin: 0 auto;
            width: 100%;
        }

        textarea {
            width: 100%;
            height: calc(100vh - 250px);
            padding: 1.5rem;
            border-radius: 12px;
            border: none;
            resize: none;
            font-size: 1rem;
            line-height: 1.6;
            transition: var(--transition);
            box-shadow: var(--shadow);
        }

        body.light-mode textarea {
            background-color: white;
            color: var(--dark-text);
        }

        body.dark-mode textarea {
            background-color: var(--dark-secondary);
            color: var(--light-text);
        }

        textarea:focus {
            outline: 2px solid var(--primary-color);
        }

        footer {
            padding: 1rem 2rem;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
        }

        .footer-content {
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .footer-links a {
            color: var(--light-text);
            text-decoration: none;
            margin-left: 1.5rem;
            transition: var(--transition);
        }

        .footer-links a:hover {
            color: var(--primary-color);
        }

        .status-indicator {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            background: rgba(255, 255, 255, 0.1);
            font-size: 0.9rem;
        }

        .status-dot {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background: var(--secondary-color);
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { transform: scale(1); opacity: 1; }
            50% { transform: scale(1.2); opacity: 0.7; }
            100% { transform: scale(1); opacity: 1; }
        }

        @media (max-width: 768px) {
            .header-content, .controls {
                flex-direction: column;
                gap: 1rem;
            }

            .url-control {
                width: 100%;
                flex-direction: column;
            }

            .footer-content {
                flex-direction: column;
                text-align: center;
                gap: 1rem;
            }

            .footer-links a {
                margin: 0 0.5rem;
            }

            textarea {
                height: calc(100vh - 350px);
            }
        }
    </style>
</head>
<body class="light-mode">
    <header>
        <div class="header-content">
            <div class="logo">
                <i class="fas fa-edit"></i>
                <h1>Collaborative Notepad</h1>
            </div>
            <div class="controls">
                <div class="status-indicator">
                    <div class="status-dot"></div>
                    <span>Connected</span>
                </div>
                <div class="url-control">
                    <input type="text" id="customUrl" placeholder="Enter custom URL" />
                    <button id="setCustomUrl">
                        <i class="fas fa-link"></i>
                        Set URL
                    </button>
                </div>
                <button onclick="window.location.href='/new'">
                    <i class="fas fa-plus"></i>
                    New Note
                </button>
                <button id="toggleMode">
                    <i class="fas fa-moon"></i>
                    Dark Mode
                </button>
            </div>
        </div>
    </header>

    <div class="container">
        <textarea id="noteInput" placeholder="Start typing your note here..."></textarea>
    </div>

    <footer>
        <div class="footer-content">
            <div>&copy; 2025 Collaborative Notepad</div>
            <div>Made with <i class="fas fa-heart" style="color: #e74c3c;"></i> by sh13y</div>
            <div class="footer-links">
                <a href="/about">About</a>
                <a href="/privacy">Privacy</a>
                <a href="/contact">Contact</a>
            </div>
        </div>
    </footer>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        const url = window.location.pathname.split('/').pop();
        let typingTimeout;

        socket.emit('joinNote', url);

        socket.on('loadNote', (note) => {
            document.getElementById('noteInput').value = note.content;
        });

        socket.on('noteUpdated', (content) => {
            const textarea = document.getElementById('noteInput');
            const cursorPosition = textarea.selectionStart;

            if (textarea.value !== content) {
                textarea.value = content;
            }

            textarea.selectionStart = cursorPosition;
            textarea.selectionEnd = cursorPosition;
        });

        function debounce(func, delay) {
            return function(...args) {
                clearTimeout(typingTimeout);
                typingTimeout = setTimeout(() => func.apply(this, args), delay);
            };
        }

        let lastContent = '';

        document.getElementById('noteInput').addEventListener('input', debounce(() => {
            const content = document.getElementById('noteInput').value;
            
            if (content !== lastContent) {
                lastContent = content;
                socket.emit('updateNote', { url, content });
            }
        }, 500));

        document.getElementById('setCustomUrl').addEventListener('click', async () => {
            const customUrl = document.getElementById('customUrl').value.trim();
            if (customUrl === url) {
                alert("You're already using this URL.");
                return;
            }

            const response = await fetch(`/setCustomUrl/${url}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ url: customUrl })
            });

            const result = await response.json();

            if (result.success) {
                window.location.href = `/notes/${customUrl}`;
            } else {
                alert(result.message);
            }
        });

        document.getElementById('toggleMode').addEventListener('click', () => {
            const body = document.body;
            const toggleButton = document.getElementById('toggleMode');
            const icon = toggleButton.querySelector('i');

            if (body.classList.contains('light-mode')) {
                body.classList.remove('light-mode');
                body.classList.add('dark-mode');
                toggleButton.innerHTML = '<i class="fas fa-sun"></i> Light Mode';
                localStorage.setItem('theme', 'dark-mode');
            } else {
                body.classList.remove('dark-mode');
                body.classList.add('light-mode');
                toggleButton.innerHTML = '<i class="fas fa-moon"></i> Dark Mode';
                localStorage.setItem('theme', 'light-mode');
            }
        });

        window.onload = function() {
            const savedTheme = localStorage.getItem('theme');
            if (savedTheme) {
                document.getElementById('noteInput').focus();
                document.body.classList.remove('light-mode', 'dark-mode');
                document.body.classList.add(savedTheme);
                const toggleButton = document.getElementById('toggleMode');
                toggleButton.innerHTML = savedTheme === 'dark-mode' ? 
                    '<i class="fas fa-sun"></i> Light Mode' : 
                    '<i class="fas fa-moon"></i> Dark Mode';
            }
        };
    </script>
</body>
</html>